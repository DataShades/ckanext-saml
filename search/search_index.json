{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#about","title":"About","text":""},{"location":"#ckanext-saml","title":"ckanext-saml","text":"<p>This extension adds an ability to login from other source (known as IdP) using SAML2 standard. Your instance is presented as the SP.</p> <p>See the documentation for more  information.</p>"},{"location":"#quick-start","title":"Quick start","text":"<ul> <li> <p>Install it with <code>PyPi</code>: </p> <p><code>pip install ckanext-saml</code></p> </li> <li> <p>Add <code>saml</code> to the list of plugins in your CKAN config (<code>ckan.plugins = saml</code>)</p> </li> </ul> <p>Configure the extension according to documentation.</p>"},{"location":"#developer-installation","title":"Developer installation","text":"<p>To install <code>ckanext-saml</code> for development, activate your CKAN virtualenv and do:</p> <pre><code>git clone https://github.com/DataShades/ckanext-saml.git\ncd ckanext-saml\npip install -e .\n</code></pre>"},{"location":"#tests","title":"Tests","text":"<p>To run the tests, do:</p> <pre><code>pytest --ckan-ini=test.ini\n</code></pre>"},{"location":"#building-the-documentation","title":"Building the documentation","text":"<p>We are using <code>mkdocs</code> to build the documentation. To build and deploy the  documentation, do:</p> <pre><code>mkdocs build &amp;&amp; mkdocs gh-deploy\n</code></pre> <p>If you're working on the documentation, you can run the following command to  start a live-reloading server without gathering the chart types fields data. It  will speed up the process significantly, as we won't need to wait for the CKAN initialization:</p> <pre><code>mkdocs serve -a 127.0.0.1:8001\n</code></pre>"},{"location":"#license","title":"License","text":"<p>AGPL</p>"},{"location":"actions/","title":"API actions","text":"<p>The extension has several actions which greatly facilitate the process of  setting up remote IdP metadata and actually make it possible to make these  settings without actually copying them.</p>"},{"location":"actions/#read-remote-metadata","title":"Read remote metadata","text":"<p><code>saml_idp_refresh</code>(context: dict[str, Any], data_dict: dict[str, Any])</p> <p>Refresh IdP details using remote metadata. It gets the remote metadata XML file  from the provided URL, parses it, caches and returns a dict with extracted data.</p> <p>Parameters: <code>url</code>(string) - a URL for the remote metadata source. Set as a  key-value pair in <code>data_dict</code> dictionary. If key <code>url</code> is not presented in  <code>data_dict</code> - use config options: <code>ckanext.saml.metadata.url</code>.</p> <p>Return: settings dict with extracted idp data </p> <p>Type: <code>dict</code></p>"},{"location":"actions/#show-remote-metadata","title":"Show remote metadata","text":"<p><code>saml_idp_show</code>(context: dict[str, Any], data_dict: dict[str, Any])</p> <p>Show IdP details pulled from the remote metadata. Actually it gets previously cached remote metadata and returns a dict with this  data. </p> <p>Return: settings dict with extracted idp data </p> <p>Type: <code>dict</code></p>"},{"location":"configuration/","title":"Configuration","text":"<p>Before start configuring, make sure that the config setting  <code>ckan.saml_custom_base_path</code> is set if your config file is not stored at <code>/etc/ckan/default/saml</code> directory.</p> <p>Copy the <code>saml</code> folder from <code>ckanext-saml</code> into the directory where your  CKAN config file is placed:</p> <pre><code>cp -R saml_example/saml YOUR_CONFIG_DIRECTORY/saml\n</code></pre> <p>Open the <code>settings.json</code> file that is in your copied <code>saml</code> folder in order  to modify it.</p> <p>You can also set them in the CKAN configuration file (e.g. ckan.ini or  production.ini) using with prefix <code>ckanext.saml.settings.substitution</code>  or using the admin configuration page.</p>"},{"location":"configuration/#configure-main-settings-file","title":"Configure main settings file","text":"<p>The main sections that should be updated within the file are<code>sp</code> and <code>idp</code>.</p>"},{"location":"configuration/#sp-modifications-ckan","title":"SP modifications (CKAN):","text":"<ol> <li> <p>Modify <code>entityId</code> with the domain name of your portal.</p> </li> <li> <p>Modify <code>url</code> in <code>assertionConsumerService</code> with the domain name of your    portal plus adding <code>/saml/</code> at the end. This is the URL where IdP will    send back the reponse with User Data. Make sure the the slash is present in    the end of the URL.</p> </li> </ol>"},{"location":"configuration/#idp-modifications","title":"IdP modifications","text":"<ol> <li> <p>Modify <code>entityId</code> by filling it with the <code>entityID</code> that should be  present in the <code>idp_metadata.xml</code> file (name of the file can be different)  that is been sent to you by the IdP.</p> </li> <li> <p>Modify <code>url</code> in <code>singleSignOnService</code>. You can find this <code>url</code> in  <code>idp_metadata.xml</code> at <code>SingleSignOnService</code> section, it should have  <code>Location</code> attribute where the url is specified.</p> </li> <li> <p>Modify <code>x509cert</code> by filling it with the <code>X509Certificate</code> that should be  present in <code>idp_metadata.xml</code>. Make sure this set as a single line string.</p> </li> </ol> <p>Note:  <code>singleLogoutService</code> is not implemented.</p>"},{"location":"configuration/#other-modifications","title":"Other modifications","text":"<p><code>advanced_settings.json</code> is used for additional configurations such as security.  It also needed to modify the <code>contactPerson</code> and <code>organization</code> sections in it if your are going to provide your SP data to your IdP.</p> <p>After updating all mentioned values in <code>settings.json</code>, at <code>DOMAIN_NAME/saml/metadata URL</code> you can find the <code>sp.xml</code> generated, which you can provide to the IdP for configuration on their side.</p> <p>The main infomation that is needed for the IdP is the <code>AssertionConsumerService</code>(ACS) which should be set on their APP for SAML. <code>AssertionConsumerService</code> should match to what you have in your settings.json and IdP APP, otherwise errors might appear.</p>"},{"location":"configuration/#configuration-options","title":"Configuration options","text":"<p>There is a number of configuration options available for the extension. You can  set them in the CKAN configuration file (e.g. ckan.ini or production.ini).</p>"},{"location":"configuration/#config-sso-path","title":"Config SSO path","text":"<p><code>ckanext.saml.sso_path</code> [optional]</p> <p>Set <code>path</code> to single sign-on.</p> <p>Type: <code>str</code></p> <p>Default: <code>/sso/post</code></p>"},{"location":"configuration/#config-slo-path","title":"Config SLO path","text":"<p><code>ckanext.saml.slo_path</code> [optional]</p> <p>Set <code>path</code> to single logout.</p> <p>Type: <code>str</code></p> <p>Default: <code>/slo/post</code></p>"},{"location":"configuration/#config-static-host","title":"Config static host","text":"<p><code>ckanext.saml.static_host</code> [optional]</p> <p>Set the name of static host for SSO.</p> <p>Type: <code>str</code></p> <p>Default: <code>None</code></p>"},{"location":"configuration/#idp-metadata-url","title":"IdP metadata url","text":"<p><code>ckanext.saml.metadata.url</code> [optional]</p> <p>Set the URL to IdP remote metadata.</p> <p>Type: <code>str</code></p> <p>Default: <code>None</code></p>"},{"location":"configuration/#login-button-text","title":"Login button text","text":"<p><code>ckanext.saml.login_button_text</code> [optional]</p> <p>Provides an ability to customize login button text.</p> <p>Legacy: <code>ckan.saml_login_button_text</code></p> <p>Type: <code>str</code></p> <p>Default: <code>SAML Login</code></p>"},{"location":"configuration/#mapper-filename","title":"Mapper filename","text":"<p><code>ckan.saml_custom_attr_map</code> [optional]</p> <p>Used to modify mapper filename.</p> <p>Type: <code>str</code></p> <p>Default: <code>mapper.py</code></p>"},{"location":"configuration/#nameid-as-an-email","title":"NameID as an email","text":"<p><code>ckan.saml_use_nameid_as_email</code> [optional]</p> <p>Set to <code>true</code> if you want to use NameID as an email for the User in order not  to claim it additionally from the IdP.</p> <p>Type: <code>bool</code></p> <p>Default: <code>false</code></p>"},{"location":"configuration/#name-from-response","title":"Name from Response","text":"<p><code>ckan.saml.name_from_response</code> [optional]</p> <p>Set to <code>true</code> if you want the User name be taken from the Response instead of generating random one.</p> <p>Type: <code>bool</code></p> <p>Default: <code>false</code></p>"},{"location":"configuration/#fields-trigger-user-update","title":"Fields trigger User update","text":"<p><code>ckan.saml.user_fields_trigger_update</code> [optional]</p> <p>By default, when User is logging in, the User update action is called only in case if <code>fullname</code> of the User from the response is updated. To extended this list, you can provide fields separated by whitespace, for example  <code>fullname name givename</code>.</p> <p>Type: <code>string</code></p> <p>Default: <code>fullname</code></p>"},{"location":"configuration/#path-to-error-tpl","title":"Path to error TPL","text":"<p><code>ckanext.saml.error_template</code> [optional]</p> <p>Set <code>path</code> to custom template for errors rendering.</p> <p>Type: <code>str</code></p> <p>Default: <code>None</code></p>"},{"location":"configuration/#path-to-saml-config-files","title":"Path to SAML config files","text":"<p><code>ckanext.saml.metadata.base_path</code> [optional]</p> <p>Provides custom path where saml settings files/folders will be searched.</p> <p>Legacy: <code>ckan.saml_custom_base_path</code></p> <p>Type: <code>str</code></p> <p>Default: <code>/etc/ckan/default/saml</code></p>"},{"location":"configuration/#reactivate-deleted-account","title":"Reactivate deleted account","text":"<p><code>ckanext.saml.reactivate_deleted_account</code> [optional]</p> <p>Change the state of a <code>deleted</code> account status to <code>active</code>.</p> <p>Type: <code>bool</code></p> <p>Default: <code>false</code></p>"},{"location":"configuration/#relaystate-path","title":"RelayState path","text":"<p><code>ckan.saml_relaystate</code> [optional]</p> <p>Set a custom RelayState <code>path</code>.</p> <p>Type: <code>str</code></p> <p>Default: <code>None</code></p>"},{"location":"configuration/#session-ttl","title":"Session TTL","text":"<p><code>ckanext.saml.session.ttl</code> [optional]</p> <p>Set the time a user can remain idle before the session is terminated and the  user must log in again.</p> <p>Type: <code>str</code></p> <p>Default: <code>30 * 24 * 3600</code></p>"},{"location":"configuration/#use-https","title":"Use HTTPS","text":"<p><code>ckan.saml_use_https</code> [optional]</p> <p>Used to send data while https, set <code>on</code> to enable it.</p> <p>Options: <code>on</code>, <code>off</code></p> <p>Type: <code>bool</code></p> <p>Default: <code>off</code></p>"},{"location":"configuration/#using-ckanroot_path","title":"Using <code>ckan.root_path</code>","text":"<p><code>ckan.saml_use_root_path</code> [optional]</p> <p>This needs to be set to <code>true</code> if you run your portal using the  <code>ckan.root_path</code>.</p> <p>Type: <code>bool</code></p> <p>Default: <code>false</code></p>"},{"location":"configuration/#use-dynamic","title":"Use dynamic","text":"<p><code>ckanext.saml.settings.dynamic</code> [optional]</p> <p>Use dynamic Single Sign-On (SSO) URLs rather than pre-defined static SSO URLs.</p> <p>Type: <code>bool</code></p> <p>Default: <code>false</code></p>"},{"location":"configuration/#use-remote-idp","title":"Use remote IdP","text":"<p><code>ckanext.saml.metadata.remote_idp</code> [optional]</p> <p>Use remote identity provider.</p> <p>Type: <code>bool</code></p> <p>Default: <code>false</code></p>"},{"location":"configuration/#use-forwarded-host","title":"Use forwarded host","text":"<p><code>ckanext.saml.use_forwarded_host</code> [optional]</p> <p>Use HTTP_X_FORWARDED_HOST when there is a proxy (or multiple proxies) between  the browser and your server.</p> <p>Type: <code>bool</code></p> <p>Default: <code>false</code></p>"},{"location":"configuration/#use-unconditional-login","title":"Use unconditional login","text":"<p><code>ckanext.saml.unconditional_login</code> [optional]</p> <p>Use unconditional login for single sign-on.</p> <p>Type: <code>bool</code></p> <p>Default: <code>false</code></p>"},{"location":"configuration/#sp-metadata","title":"SP metadata","text":"<p>As mentioned above, you can find SP metadata at <code>DOMAIN_NAME/saml/metadata URL</code> after configuring <code>advanced_settings.json</code>.  This URL is accessible only to <code>sysadmins</code> and presented in XML format.  Additional tab on <code>/ckan-admin/</code> is added, that leads to this page.</p>"},{"location":"configuration/#data-encryption","title":"Data encryption","text":"<p>In order to encrypt the coming data from the IdP use <code>advanced_settings.json</code> file. In <code>security</code> section, you can enable encryption for NameId and all other data that will be returned to the SP.</p> <p>If you enable one of <code>authnRequestsSigned</code>,<code>logoutRequestSigned</code>,<code>logoutResponseSigned</code>, <code>wantAssertionsEncrypted</code>, <code>wantNameIdEncrypted</code> (you can find description  of each option here),  you will have to create x509 certificate  in you SP. Cerificate should be created in <code>certs</code> folder, files should be  named as <code>sp.crt</code> and <code>sp.key</code> (private key). After creating it, your  <code>sp.xml</code> will show you public key <code>ds:X509Certificate</code> that should be  delivered to your IdP in order to configure encryption.</p>"},{"location":"configuration/#extras","title":"Extras","text":"<p>ckanext-saml has interface <code>ICKANSAML</code> which has two hooks that can be used for User data modificaiton and Organization memberships logic while login.</p> <ul> <li> <p><code>after_mapping</code> - Used after Users data is being mapped, but before the User is being created.</p> </li> <li> <p><code>roles_and_organizations</code> - Used for adding custom logic for Organization membership that is going to be applied to the User. There is no default logic for this, so should be added in your custom extension using this hook.</p> </li> </ul>"},{"location":"install/","title":"Installation","text":""},{"location":"install/#requirements","title":"Requirements","text":"<p><code>ckanext-saml</code> uses <code>python3-saml</code> library in order to make requests to the IdP and return responses from it. Github repository can be found here. There you can also find examples of fields that can be used in <code>settings.json</code> and <code>advanced_settings.json</code>.</p> <p>Compatibility with core CKAN versions:</p> CKAN version Compatible? 2.9 and earlier no 2.10+ yes"},{"location":"install/#installation_1","title":"Installation","text":"<ul> <li>Install the extension from <code>PyPI</code>:</li> </ul> <pre><code>pip install ckanext-saml \n</code></pre> <ul> <li>Add <code>saml</code> to the <code>ckan.plugins</code> setting in your CKAN configuration file (e.g. <code>ckan.ini</code> or <code>production.ini</code>):</li> </ul> <pre><code>ckan.plugins = ... saml ...\n</code></pre> <ul> <li>Initialize a new table (if you previously used [ckanext-saml2] (https://github.com/datashades/ckanext-saml2), you can skip this step or make sure that you have saml2_user table in your DB):</li> </ul> <pre><code>ckan db upgrade -p saml\n</code></pre>"},{"location":"install/#dependencies","title":"Dependencies","text":"<p>The extension requires the following libraries to be installed and enabled:</p> <ol> <li><code>python</code> =&gt; 3.7</li> <li><code>python3-saml</code>: SAML Python3 toolkit.</li> <li><code>xmlsec</code>: Python bindings for the XML Security Library.</li> <li><code>lxml</code>: Python bindings for the libxml2 and libxslt libraries.</li> <li><code>isodate</code>: An ISO 8601 date/time/duration parser and formatter</li> </ol>"},{"location":"troubleshooting/","title":"Troubleshooting","text":"<p>Typical issues that users\\developers can have</p>"},{"location":"troubleshooting/#systemerror","title":"SystemError","text":"<p>import xmlsec - SystemError: null argument to internal routine</p> <p>If this error appears on CentOS, you might need to install additional packages:</p> <pre><code>```\nyum install libxml2-devel xmlsec1-devel xmlsec1-openssl-devel libtool-ltdl-devel\n```\n</code></pre>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#basic-usage","title":"Basic usage","text":"<p>This is the example of setting up of the extension against  Auth0 authentication and authorization platform.</p> <ol> <li> <p>Register and log in to Auth0</p> <p></p> </li> <li> <p>Go to the Applications section     </p> </li> <li> <p>Create a new app and switch to the Settings tab to set necessary configs      </p> </li> <li> <p>Switch to the Addons tab and enable SAML2 WEB APP     </p> </li> <li> <p>Get all necessary IdP configs     </p> <p>by downloading Identity Provider Metadata</p> <pre><code>&lt;EntityDescriptor entityID=\"urn:dev-4kxfsg2.us.auth0.com\" xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\"&gt;\n    &lt;IDPSSODescriptor protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\"&gt;\n        &lt;KeyDescriptor use=\"signing\"&gt;\n            &lt;KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\"&gt;\n                &lt;X509Data&gt;\n                &lt;X509Certificate&gt;4VDqTySXJSeAdNI4HEGux&lt;/X509Certificate&gt;\n                &lt;/X509Data&gt;\n            &lt;/KeyInfo&gt;\n        &lt;/KeyDescriptor&gt;\n        &lt;SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://dev-4kxfsg2.us.auth0.com/samlp/I1jiX2fUdlcermot0cl0ACDNWek01qx4/logout\"/&gt;\n        &lt;SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://dev-4kxfsg2.us.auth0.com/samlp/I1jiX2fUdlcermot0cl0ACDNWek01qx4/logout\"/&gt;\n        &lt;NameIDFormat&gt;urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress&lt;/NameIDFormat&gt;\n        &lt;NameIDFormat&gt;urn:oasis:names:tc:SAML:2.0:nameid-format:persistent&lt;/NameIDFormat&gt;\n        &lt;NameIDFormat&gt;urn:oasis:names:tc:SAML:2.0:nameid-format:transient&lt;/NameIDFormat&gt;\n        &lt;SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://dev-4kxfsg2.us.auth0.com/samlp/I1jiX2fUdlcermot0cl0ACDNWek01qx4\"/&gt;\n        &lt;SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://dev-4kxfsg2.us.auth0.com/samlp/I1jiX2fUdlcermot0cl0ACDNWek01qx4\"/&gt;\n        &lt;Attribute Name=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName=\"E-Mail Address\" xmlns=\"urn:oasis:names:tc:SAML:2.0:assertion\"/&gt;\n        &lt;Attribute Name=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName=\"Given Name\" xmlns=\"urn:oasis:names:tc:SAML:2.0:assertion\"/&gt;\n        &lt;Attribute Name=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName=\"Name\" xmlns=\"urn:oasis:names:tc:SAML:2.0:assertion\"/&gt;\n        &lt;Attribute Name=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName=\"Surname\" xmlns=\"urn:oasis:names:tc:SAML:2.0:assertion\"/&gt;\n        &lt;Attribute Name=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName=\"Name ID\" xmlns=\"urn:oasis:names:tc:SAML:2.0:assertion\"/&gt;\n    &lt;/IDPSSODescriptor&gt;\n&lt;/EntityDescriptor&gt;\n</code></pre> </li> <li> <p>Configure main settings file <code>settings.json</code>.      It may be done manually inside the file or through the CKAN configuration      file using variables with prefix <code>ckanext.saml.settings.substitution</code>.     The example of the settings.json file is below:</p> <pre><code>{\n    \"strict\": true,\n    \"debug\": true,\n\n    \"sp\": {\n        \"entityId\": \"&lt;SP_ENTITY_ID&gt;\",\n        \"assertionConsumerService\": {\n            \"url\": \"&lt;SITE_URL&gt;/sso/post\",\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\n        },\n        \"singleLogoutService\": {\n            \"url\": \"&lt;SITE_URL&gt;/slo/post\",\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\n        },\n        \"NameIDFormat\": \"urn:oasis:names:tc:SAML:2.0:nameid-format:transient\",\n        \"x509cert\": \"&lt;SP_CERT&gt;\",\n        \"privateKey\": \"&lt;SP_PRIVATE_CERT&gt;\"\n    },\n\n    \"idp\": {\n        \"entityId\": \"&lt;IDP_ENTITY_ID&gt;\",\n        \"singleSignOnService\": {\n            \"url\": \"&lt;SSO_URL&gt;\",\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\n        },\n        \"singleLogoutService\": {\n            \"url\": \"&lt;SLO_URL&gt;\",\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\n        },\n        \"x509cert\": \"&lt;CERT&gt;\"\n    },\n\n    \"security\": {\n        \"requestedAuthnContext\": false,\n        \"nameIdEncrypted\": false,\n        \"authnRequestsSigned\": true,\n        \"logoutRequestSigned\": false,\n        \"logoutResponseSigned\": false,\n        \"signMetadata\": false,\n        \"wantMessagesSigned\": false,\n        \"wantAssertionsSigned\": false,\n        \"wantNameId\" : true,\n        \"wantNameIdEncrypted\": false,\n        \"wantAssertionsEncrypted\": false,\n        \"signatureAlgorithm\": \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n        \"digestAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#sha256\"\n    },\n    \"contactPerson\": {\n        \"technical\": {\n            \"givenName\": \"technical_name\",\n            \"emailAddress\": \"technical@example.com\"\n        },\n        \"support\": {\n            \"givenName\": \"support_name\",\n            \"emailAddress\": \"support@example.com\"\n        }\n    },\n    \"organization\": {\n        \"en-US\": {\n            \"name\": \"sp_test\",\n            \"displayname\": \"SP test\",\n            \"url\": \"http://sp.example.com\"\n        }\n    }\n}\n</code></pre> </li> <li> <p>SAML settings in CKAN config file (e.g. ckan.ini or production.ini)</p> <pre><code>## ckanext-saml\nckanext.saml.unconditional_login = true\nckan.saml_custom_base_path = %(here)s/saml\nckanext.saml.metadata.base_path = %(here)s/saml\nckan.saml_use_https = true\nckanext.saml.settings.dynamic = true\nckanext.saml.session.ttl = 2_592_000\nckanext.saml.reactivate_deleted_account = true\nckanext.saml.settings.substitution.SITE_URL = %(ckan.site_url)s\nckanext.saml.settings.substitution.SP_ENTITY_ID = %(ckan.site_url)s\nckanext.saml.settings.substitution.IDP_ENTITY_ID = urn:dev-4kxfsg2.us.auth0.com\nckanext.saml.settings.substitution.SSO_URL = https://dev-4kxfsg2.us.auth0.com/samlp/I1jiX2fUdlcermot\nckanext.saml.settings.substitution.SLO_URL = https://dev-4kxfsg2.us.auth0.com/samlp/I1jiX2fUdlcermot\nckanext.saml.settings.substitution.CERT = MIIDHTCCAgWgAwIBAgIJMpgtCcFJo8dsdff...VDqTySXJSeAdNI4HEGux\nckanext.saml.settings.substitution.SP_PRIVATE_CERT = MIIEvgIBADANBgkqhkiG9w0B...kYLQbPdaq+Bv7keWLz\n</code></pre> </li> <li> <p>Log in to CKAN using SAML      </p> </li> <li> <p>Finally you are there with secure access.</p> </li> </ol>"}]}